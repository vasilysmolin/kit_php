version: '3'

services:

  # PHP -----------------------------------------------
  php:
    build:
      context: images/php
      dockerfile: Dockerfile
      args:
        - ENV=${DOCKER_ENV}
        - USER=${USER}
        - UID=${UID}
    container_name: ${BB_PHP_WORKDIR}
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
    restart: always
    working_dir: /var/www/${BB_PHP_WORKDIR}
    volumes:
      - .:/var/www/${BB_PHP_WORKDIR}
    depends_on:
      - database
    command: [
        "composer install --no-interaction --ansi --no-suggest",
        "php artisan migrate --force",
        "php artisan db:seed --force",
        "php artisan optimize",
        "php composer exec phpcs -v",
        "php php artisan test",
    ]
  # Nginx -----------------------------------------------
  nginx:
    build:
      context: images/nginx
      dockerfile: Dockerfile
      args:
        - DOMAIN=${DOMAIN}
        - ENV=${DOCKER_ENV}
        - BACK_DIR=${BB_PHP_WORKDIR}
        - LOCAL_DIR=${BB_NGINX_WORKDIR}
    container_name: ${BB_NGINX_WORKDIR}
    restart: always
    ports:
      - "${PORT_HTTP}:80"
      - "${PORT_HTTPS}:443"
    working_dir: /var/www/${BB_NGINX_WORKDIR}
    volumes:
      - .:/var/www/${BB_NGINX_WORKDIR}
    depends_on:
      - php
  # MySQL -------------------------------------------------
#  mysql:
#    image: mysql:5.7.4
#    container_name: ${BB_MYSQL_WORKDIR}
#    restart: always
#    tty: true
#    ports:
#      - "${PORT_MYSQL}:3306"
#    volumes:
#      - ./dump:/var/lib/mysql
#      - ./images/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
#      - ./images/mysql/mysqldump.cnf:/etc/mysql/conf.d/mysqldump.cnf
#      - ./images/mysql/optimize.cnf:/etc/mysql/conf.d/optimize.cnf
#    environment:
#        - MYSQL_DATABASE=${MYSQL_DATABASE}
#        - MYSQL_USER=${MYSQL_USER}
#        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}

  # Redis -------------------------------------------------
  redis:
    image: redis:6-alpine
    container_name: ${BB_REDIS_WORKDIR}
    restart: always
    volumes:
      - ./images/redis/redis.conf:/redis.conf
    depends_on:
      - php
      - database
    command: [ "redis-server", "/redis.conf" ]

  database:
    build:
      context: images/postgres
      dockerfile: Dockerfile
    container_name: database
    restart: always
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: laravel_docker
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
